/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    id("com.github.yannicklamprecht.java-conventions")
    id("com.github.johnrengelman.shadow") version shadowVersion
}

dependencies {
    implementation(projects.api)
    implementation(projects.version116)
    implementation(projects.version117)
    compileOnly("org.spigotmc:spigot-api:1.14.4-R0.1-SNAPSHOT")
}

description = "plugin"

tasks.shadowJar {
    archiveClassifier.set("mojang")
}


fun filePathWithClassifier(classifier: String): File {
    return project.tasks.shadowJar.get().archiveFile.get().asFile.parentFile
        .resolve(
            "${project.tasks.shadowJar.get().archiveBaseName.get()}-${project.version}${classifier.let { "-$it" }}.jar"
        )
}

fun remap(vararg additionalParameters: String, inputPath: File, outputPath: File, mapEnding: String) {

    project.parent?.let {

        println()

        val mutableArguments = mutableListOf(
            "java",
            "-jar",
            it.projectDir.resolve("specialsource/SpecialSource.jar").toString(),
            "-i",
            inputPath.absolutePath,
            "-o",
            outputPath.absolutePath,
            "-m",
            System.getProperty("user.home") + "/.m2/repository/org/spigotmc/minecraft-server/1.17-R0.1-SNAPSHOT/minecraft-server-1.17-R0.1-SNAPSHOT-${mapEnding}"
        )

        mutableArguments.addAll(additionalParameters)


        cmd(
            *mutableArguments.toTypedArray(),
            directory = buildToolsDir,
            printToStdout = true
        )
    }
}

val remap: Task by tasks.creating {
    group = taskGroup
    doLast {
        remap(
            "--reverse",
            inputPath = filePathWithClassifier("mojang"),
            outputPath = filePathWithClassifier("obf"),
            mapEnding = "maps-mojang.txt"
        )
        remap(
            inputPath = filePathWithClassifier("obf"),
            outputPath = filePathWithClassifier("spigot"),
            mapEnding = "maps-spigot.csrg"
        )
        filePathWithClassifier("obf").delete()
    }
}
remap.name


