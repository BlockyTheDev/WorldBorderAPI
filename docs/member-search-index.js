memberSearchIndex = [{"p":"com.github.yannicklamprecht.worldborder.api","c":"AbstractWorldBorder","l":"AbstractWorldBorder(Supplier<Position>, Consumer<Position>, Supplier<Position>, Supplier<Position>, Supplier<Double>, Consumer<Double>, Supplier<Integer>, Consumer<Integer>, Consumer<Double>, Supplier<Double>, Consumer<Double>, Supplier<Integer>, Consumer<Integer>, Supplier<Integer>, Consumer<Integer>, Function<Location, Boolean>, FunctionDoubleDoubleLong)","url":"%3Cinit%3E(java.util.function.Supplier,java.util.function.Consumer,java.util.function.Supplier,java.util.function.Supplier,java.util.function.Supplier,java.util.function.Consumer,java.util.function.Supplier,java.util.function.Consumer,java.util.function.Consumer,java.util.function.Supplier,java.util.function.Consumer,java.util.function.Supplier,java.util.function.Consumer,java.util.function.Supplier,java.util.function.Consumer,java.util.function.Function,com.github.yannicklamprecht.worldborder.api.FunctionDoubleDoubleLong)"},{"p":"com.github.yannicklamprecht.worldborder.api","c":"WorldBorderData","l":"applyAll(IWorldBorder)","url":"applyAll(com.github.yannicklamprecht.worldborder.api.IWorldBorder)"},{"p":"com.github.yannicklamprecht.worldborder.api","c":"WorldBorderData","l":"applyCenter(BiConsumer<Double, Double>)","url":"applyCenter(java.util.function.BiConsumer)"},{"p":"com.github.yannicklamprecht.worldborder.api","c":"BorderAPI","l":"getApi()"},{"p":"com.github.yannicklamprecht.worldborder.api","c":"AbstractWorldBorder","l":"getCenter()"},{"p":"com.github.yannicklamprecht.worldborder.api","c":"IWorldBorder","l":"getCenter()"},{"p":"com.github.yannicklamprecht.worldborder.api","c":"WorldBorderData","l":"getDamageAmount()"},{"p":"com.github.yannicklamprecht.worldborder.api","c":"WorldBorderData","l":"getDamageBuffer()"},{"p":"com.github.yannicklamprecht.worldborder.api","c":"AbstractWorldBorder","l":"getDamageBufferInBlocks()"},{"p":"com.github.yannicklamprecht.worldborder.api","c":"IWorldBorder","l":"getDamageBufferInBlocks()"},{"p":"com.github.yannicklamprecht.worldborder.api","c":"AbstractWorldBorder","l":"getDamagePerSecondPerBlock()"},{"p":"com.github.yannicklamprecht.worldborder.api","c":"IWorldBorder","l":"getDamagePerSecondPerBlock()"},{"p":"com.github.yannicklamprecht.worldborder.api","c":"AbstractWorldBorder","l":"getMax()"},{"p":"com.github.yannicklamprecht.worldborder.api","c":"IWorldBorder","l":"getMax()"},{"p":"com.github.yannicklamprecht.worldborder.api","c":"AbstractWorldBorder","l":"getMin()"},{"p":"com.github.yannicklamprecht.worldborder.api","c":"IWorldBorder","l":"getMin()"},{"p":"com.github.yannicklamprecht.worldborder.api","c":"AbstractWorldBorder","l":"getSize()"},{"p":"com.github.yannicklamprecht.worldborder.api","c":"IWorldBorder","l":"getSize()"},{"p":"com.github.yannicklamprecht.worldborder.api","c":"WorldBorderData","l":"getSize()"},{"p":"com.github.yannicklamprecht.worldborder.api","c":"WorldBorderData","l":"getWarningDistance()"},{"p":"com.github.yannicklamprecht.worldborder.api","c":"AbstractWorldBorder","l":"getWarningDistanceInBlocks()"},{"p":"com.github.yannicklamprecht.worldborder.api","c":"IWorldBorder","l":"getWarningDistanceInBlocks()"},{"p":"com.github.yannicklamprecht.worldborder.api","c":"AbstractWorldBorder","l":"getWarningTimerInSeconds()"},{"p":"com.github.yannicklamprecht.worldborder.api","c":"IWorldBorder","l":"getWarningTimerInSeconds()"},{"p":"com.github.yannicklamprecht.worldborder.api","c":"WorldBorderData","l":"getWarningTimeSeconds()"},{"p":"com.github.yannicklamprecht.worldborder.api","c":"WorldBorderApi","l":"getWorldBorder(Player)","url":"getWorldBorder(org.bukkit.entity.Player)"},{"p":"com.github.yannicklamprecht.worldborder.api","c":"WorldBorderApiImpl","l":"getWorldBorder(Player)","url":"getWorldBorder(org.bukkit.entity.Player)"},{"p":"com.github.yannicklamprecht.worldborder.api","c":"WorldBorderApi","l":"getWorldBorder(World)","url":"getWorldBorder(org.bukkit.World)"},{"p":"com.github.yannicklamprecht.worldborder.api","c":"WorldBorderApiImpl","l":"getWorldBorder(World)","url":"getWorldBorder(org.bukkit.World)"},{"p":"com.github.yannicklamprecht.worldborder.api","c":"PersistentWorldBorderApi","l":"getWorldBorderData(Player)","url":"getWorldBorderData(org.bukkit.entity.Player)"},{"p":"com.github.yannicklamprecht.worldborder.api","c":"Position","l":"getX()"},{"p":"com.github.yannicklamprecht.worldborder.api","c":"Position","l":"getZ()"},{"p":"com.github.yannicklamprecht.worldborder.api","c":"WorldBorderAction","l":"INITIALIZE"},{"p":"com.github.yannicklamprecht.worldborder.api","c":"AbstractWorldBorder","l":"isInBounds(Location)","url":"isInBounds(org.bukkit.Location)"},{"p":"com.github.yannicklamprecht.worldborder.api","c":"IWorldBorder","l":"isInBounds(Location)","url":"isInBounds(org.bukkit.Location)"},{"p":"com.github.yannicklamprecht.worldborder.api","c":"WorldBorderAction","l":"LERP_SIZE"},{"p":"com.github.yannicklamprecht.worldborder.api","c":"AbstractWorldBorder","l":"lerp(double, double, long)","url":"lerp(double,double,long)"},{"p":"com.github.yannicklamprecht.worldborder.api","c":"FunctionDoubleDoubleLong","l":"lerp(double, double, long)","url":"lerp(double,double,long)"},{"p":"com.github.yannicklamprecht.worldborder.api","c":"IWorldBorder","l":"lerp(double, double, long)","url":"lerp(double,double,long)"},{"p":"com.github.yannicklamprecht.worldborder.api","c":"Position","l":"Position(double, double)","url":"%3Cinit%3E(double,double)"},{"p":"com.github.yannicklamprecht.worldborder.api","c":"Position","l":"Position(Location)","url":"%3Cinit%3E(org.bukkit.Location)"},{"p":"com.github.yannicklamprecht.worldborder.api","c":"WorldBorderApi","l":"resetWorldBorderToGlobal(Player)","url":"resetWorldBorderToGlobal(org.bukkit.entity.Player)"},{"p":"com.github.yannicklamprecht.worldborder.api","c":"WorldBorderApiImpl","l":"resetWorldBorderToGlobal(Player)","url":"resetWorldBorderToGlobal(org.bukkit.entity.Player)"},{"p":"com.github.yannicklamprecht.worldborder.api","c":"IWorldBorder","l":"send(Player, WorldBorderAction)","url":"send(org.bukkit.entity.Player,com.github.yannicklamprecht.worldborder.api.WorldBorderAction)"},{"p":"com.github.yannicklamprecht.worldborder.api","c":"WorldBorderApi","l":"sendRedScreenForSeconds(Player, long, JavaPlugin)","url":"sendRedScreenForSeconds(org.bukkit.entity.Player,long,org.bukkit.plugin.java.JavaPlugin)"},{"p":"com.github.yannicklamprecht.worldborder.api","c":"WorldBorderApiImpl","l":"sendRedScreenForSeconds(Player, long, JavaPlugin)","url":"sendRedScreenForSeconds(org.bukkit.entity.Player,long,org.bukkit.plugin.java.JavaPlugin)"},{"p":"com.github.yannicklamprecht.worldborder.api","c":"WorldBorderAction","l":"SET_CENTER"},{"p":"com.github.yannicklamprecht.worldborder.api","c":"WorldBorderAction","l":"SET_SIZE"},{"p":"com.github.yannicklamprecht.worldborder.api","c":"WorldBorderAction","l":"SET_WARNING_BLOCKS"},{"p":"com.github.yannicklamprecht.worldborder.api","c":"WorldBorderAction","l":"SET_WARNING_TIME"},{"p":"com.github.yannicklamprecht.worldborder.api","c":"WorldBorderApi","l":"setBorder(Player, double)","url":"setBorder(org.bukkit.entity.Player,double)"},{"p":"com.github.yannicklamprecht.worldborder.api","c":"WorldBorderApiImpl","l":"setBorder(Player, double)","url":"setBorder(org.bukkit.entity.Player,double)"},{"p":"com.github.yannicklamprecht.worldborder.api","c":"WorldBorderApi","l":"setBorder(Player, double, Location)","url":"setBorder(org.bukkit.entity.Player,double,org.bukkit.Location)"},{"p":"com.github.yannicklamprecht.worldborder.api","c":"WorldBorderApiImpl","l":"setBorder(Player, double, Location)","url":"setBorder(org.bukkit.entity.Player,double,org.bukkit.Location)"},{"p":"com.github.yannicklamprecht.worldborder.api","c":"WorldBorderApi","l":"setBorder(Player, double, long)","url":"setBorder(org.bukkit.entity.Player,double,long)"},{"p":"com.github.yannicklamprecht.worldborder.api","c":"WorldBorderApiImpl","l":"setBorder(Player, double, long)","url":"setBorder(org.bukkit.entity.Player,double,long)"},{"p":"com.github.yannicklamprecht.worldborder.api","c":"WorldBorderApi","l":"setBorder(Player, double, long, TimeUnit)","url":"setBorder(org.bukkit.entity.Player,double,long,java.util.concurrent.TimeUnit)"},{"p":"com.github.yannicklamprecht.worldborder.api","c":"WorldBorderApiImpl","l":"setBorder(Player, double, long, TimeUnit)","url":"setBorder(org.bukkit.entity.Player,double,long,java.util.concurrent.TimeUnit)"},{"p":"com.github.yannicklamprecht.worldborder.api","c":"WorldBorderData","l":"setCenter(double, double)","url":"setCenter(double,double)"},{"p":"com.github.yannicklamprecht.worldborder.api","c":"AbstractWorldBorder","l":"setCenter(Position)","url":"setCenter(com.github.yannicklamprecht.worldborder.api.Position)"},{"p":"com.github.yannicklamprecht.worldborder.api","c":"IWorldBorder","l":"setCenter(Position)","url":"setCenter(com.github.yannicklamprecht.worldborder.api.Position)"},{"p":"com.github.yannicklamprecht.worldborder.api","c":"WorldBorderData","l":"setDamageAmount(double)"},{"p":"com.github.yannicklamprecht.worldborder.api","c":"WorldBorderData","l":"setDamageBuffer(double)"},{"p":"com.github.yannicklamprecht.worldborder.api","c":"AbstractWorldBorder","l":"setDamageBufferInBlocks(double)"},{"p":"com.github.yannicklamprecht.worldborder.api","c":"IWorldBorder","l":"setDamageBufferInBlocks(double)"},{"p":"com.github.yannicklamprecht.worldborder.api","c":"AbstractWorldBorder","l":"setDamageBufferInBlocks(int)"},{"p":"com.github.yannicklamprecht.worldborder.api","c":"IWorldBorder","l":"setDamageBufferInBlocks(int)"},{"p":"com.github.yannicklamprecht.worldborder.api","c":"AbstractWorldBorder","l":"setDamagePerSecondPerBlock(double)"},{"p":"com.github.yannicklamprecht.worldborder.api","c":"IWorldBorder","l":"setDamagePerSecondPerBlock(double)"},{"p":"com.github.yannicklamprecht.worldborder.api","c":"AbstractWorldBorder","l":"setDamagerPerSecondPerBlock(double)"},{"p":"com.github.yannicklamprecht.worldborder.api","c":"IWorldBorder","l":"setDamagerPerSecondPerBlock(double)"},{"p":"com.github.yannicklamprecht.worldborder.api","c":"AbstractWorldBorder","l":"setSize(double)"},{"p":"com.github.yannicklamprecht.worldborder.api","c":"IWorldBorder","l":"setSize(double)"},{"p":"com.github.yannicklamprecht.worldborder.api","c":"WorldBorderData","l":"setSize(double)"},{"p":"com.github.yannicklamprecht.worldborder.api","c":"WorldBorderData","l":"setWarningDistance(int)"},{"p":"com.github.yannicklamprecht.worldborder.api","c":"AbstractWorldBorder","l":"setWarningDistanceInBlocks(int)"},{"p":"com.github.yannicklamprecht.worldborder.api","c":"IWorldBorder","l":"setWarningDistanceInBlocks(int)"},{"p":"com.github.yannicklamprecht.worldborder.api","c":"AbstractWorldBorder","l":"setWarningTimeInSeconds(int)"},{"p":"com.github.yannicklamprecht.worldborder.api","c":"IWorldBorder","l":"setWarningTimeInSeconds(int)"},{"p":"com.github.yannicklamprecht.worldborder.api","c":"WorldBorderData","l":"setWarningTimeSeconds(int)"},{"p":"com.github.yannicklamprecht.worldborder.api","c":"BorderAPI","l":"setWorldBorderApi(WorldBorderApi)","url":"setWorldBorderApi(com.github.yannicklamprecht.worldborder.api.WorldBorderApi)"},{"p":"com.github.yannicklamprecht.worldborder.api","c":"Position","l":"setX(double)"},{"p":"com.github.yannicklamprecht.worldborder.api","c":"Position","l":"setZ(double)"},{"p":"com.github.yannicklamprecht.worldborder.api","c":"WorldBorderAction","l":"valueOf(String)","url":"valueOf(java.lang.String)"},{"p":"com.github.yannicklamprecht.worldborder.api","c":"WorldBorderAction","l":"values()"},{"p":"com.github.yannicklamprecht.worldborder.api","c":"WorldBorderApiImpl","l":"WorldBorderApiImpl(Function<Player, IWorldBorder>, Function<World, IWorldBorder>)","url":"%3Cinit%3E(java.util.function.Function,java.util.function.Function)"},{"p":"com.github.yannicklamprecht.worldborder.api","c":"WorldBorderData","l":"WorldBorderData()","url":"%3Cinit%3E()"}]